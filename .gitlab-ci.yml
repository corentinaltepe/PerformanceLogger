build:
  stage: build
  image: microsoft/dotnet:2.2-sdk
  dependencies: []
  script:
  - dotnet build PerformanceLogger
  - dotnet build Extensions/Logging
  - dotnet build Extensions/Postgres
  - dotnet build Extensions/DependencyInjection
  - dotnet build Extensions/AutoLogger
  - dotnet build Sample
  artifacts:
    untracked: true
    expire_in: 1 day

# Runs the unit tests with coverage analysis
unit-test:
  stage: test
  image: microsoft/dotnet:2.2-sdk
  dependencies: []
  script:
  - dotnet test Tests/Unit/PerformanceLogger.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
  - dotnet test Tests/Unit/Extensions/AutoLogger.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
  artifacts:
    untracked: true
    expire_in: 1 day

# Runs the integration tests
integration-tests:
  stage: test
  image: microsoft/dotnet:2.2-sdk
  dependencies: []
  script:
  - dotnet test Tests/Integration/Extensions/DependencyInjection.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
  artifacts:
    untracked: true
    expire_in: 1 day

# SONAR Analysis
# Can only be run on a configured runner with the proper key managed by Gitlab CI Runner settings
sonar:
  stage: quality
  tags: 
  - batch
  - windows10
  - corentin
  dependencies: []
  script:
  - dotnet restore
  - dotnet clean
  - dotnet-sonarscanner begin /k:"performancelogger" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="$sonar_key" /d:sonar.cs.opencover.reportsPaths="Tests/**/coverage.xml"
  - dotnet build
  - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=\"[Test.Base]*,[*.Test]*,[*.Tests]*,[xunit.*]*\" /p:CoverletOutput="coverage.xml"
  - dotnet-sonarscanner end /d:sonar.login="$sonar_key"
  except:
  - tags

nuget-publication:
  stage: deploy
  image: microsoft/dotnet:2.2-sdk
  dependencies: []
  script:
  # Set the version from the git tag
  - export BUILD_BUILDNUMBER=$CI_COMMIT_TAG
  - dotnet pack PerformanceLogger
  - dotnet pack Extensions/Logging
  - dotnet pack Extensions/Postgres
  - dotnet pack Extensions/DependencyInjection
  - dotnet pack Extensions/AutoLogger
  - dotnet nuget push PerformanceLogger/bin/Debug/PerformanceLogger.$CI_COMMIT_TAG.nupkg                                              -k $nuget_key -s https://api.nuget.org/v3/index.json
  - dotnet nuget push Extensions/Logging/bin/Debug/PerformanceLogger.Extensions.Logging.$CI_COMMIT_TAG.nupkg                          -k $nuget_key -s https://api.nuget.org/v3/index.json
  - dotnet nuget push Extensions/Postgres/bin/Debug/PerformanceLogger.Extensions.Postgres.$CI_COMMIT_TAG.nupkg                        -k $nuget_key -s https://api.nuget.org/v3/index.json
  - dotnet nuget push Extensions/DependencyInjection/bin/Debug/PerformanceLogger.Extensions.DependencyInjection.$CI_COMMIT_TAG.nupkg  -k $nuget_key -s https://api.nuget.org/v3/index.json
  - dotnet nuget push Extensions/AutoLogger/bin/Debug/PerformanceLogger.Extensions.AutoLogger.$CI_COMMIT_TAG.nupkg                    -k $nuget_key -s https://api.nuget.org/v3/index.json
  only:
  - tags
